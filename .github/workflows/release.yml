name: Create Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.10"

# Add repo secrets (DISCUSSION_REPO_ID & DISCUSSION_CATEGORY_ID)
# https://github.com/marketplace/actions/create-github-discussion#obtaining-the-repository-id-and-category-id

jobs:
  version:
    name: Generate version and tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
      MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }} #TODO: Update to use valid python versions
    steps:
      - uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
      - name: Create annotation for build error
        run: |
          echo "::notice::FullSemVer ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "::notice::MajorMinorPatch ${{ steps.gitversion.outputs.MajorMinorPatch }}"
      - name: Bump version and push tag # https://github.com/marketplace/actions/github-tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.gitversion.outputs.FullSemVer }}
          tag_prefix: v
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    needs: [version]
    steps:
      - uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4 # https://github.com/marketplace/actions/setup-python
        id: setup-python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Version package
        run: poetry version ${{ needs.version.outputs.MajorMinorPatch }}
      - name: Build package
        run: poetry build
      # - name: Publish package distributions to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      # - name: Release Changelog Builder
      #   uses: mikepenz/release-changelog-builder-action@v4 # https://github.com/marketplace/actions/release-changelog-builder
      #   id: gen_note
      #   with:
      #     configuration: ".changelog.json"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ needs.version.outputs.FullSemVer }}
          # body: ${{ steps.gen_note.outputs.changelog }}
          discussion_category_name: Announcements
          generate_release_notes: true
      # - name: Create a new GitHub Discussion
      #   id: create-discussion
      #   uses: abirismyname/create-discussion@v1.x # https://github.com/marketplace/actions/create-github-discussion
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     title: Releaese v${{ needs.version.outputs.FullSemVer }}
      #     body: |
      #       [Release](https://github.com/danstis/ado-asana-sync/releases/tag/v${{ needs.version.outputs.FullSemVer }})
      #       ${{ steps.gen_note.outputs.changelog }}
      #     repository-id: ${{ secrets.DISCUSSION_REPO_ID }}
      #     category-id: ${{ secrets.DISCUSSION_CATEGORY_ID }}
