name: Test and Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "20 7 * * 6"
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.13"

jobs:
  version:
    name: Generate version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
      PreReleaseTag: ${{ steps.gitversion.outputs.PreReleaseTag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: "6.x"
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v4.1.0
      - name: Create annotation for build error
        run: |
          echo "::notice::FullSemVer ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "::notice::PreReleaseTag ${{ steps.gitversion.outputs.PreReleaseTag }}"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5 # https://github.com/marketplace/actions/setup-python
        id: setup-python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install dependencies
        run: uv sync --dev
      - name: Test with pytest
        run: uv run tox -e pytest
      - uses: actions/upload-artifact@v4
        with:
          name: test-output
          path: coverage.xml

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [version, test]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-python@v5 # https://github.com/marketplace/actions/setup-python
        id: setup-python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install dependencies
        run: uv sync --dev
      - name: Lint and format with ruff
        run: |
          uv run ruff check --output-format=json ado_asana_sync > ruff.json || true
          uv run ruff check ado_asana_sync | tee ruff.out || true
      - name: Static type check with mypy
        run: |
          uv run mypy ado_asana_sync | tee mypy.out
      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0 # https://github.com/marketplace/actions/hadolint-action
        with:
          dockerfile: Dockerfile
          output-file: hadolint.out
          format: json
          failure-threshold: ignore
      - uses: actions/download-artifact@v5
        with:
          name: test-output
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectVersion=${{ needs.version.outputs.FullSemVer }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
